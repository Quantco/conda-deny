name: Binary Build
permissions: read-all
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  metadata:
    name: Check if version changed
    runs-on: ubuntu-latest
    outputs:
      release: ${{ github.repository == 'Quantco/conda-deny' && steps.version-metadata.outputs.changed == 'true' }}
      version: ${{ steps.version-metadata.outputs.newVersion }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: Quantco/ui-actions/version-metadata@cd71d2a0e30b25569f6d723e57acca83347e58fc
        id: version-metadata
        with:
          file: ./Cargo.toml
          token: ${{ secrets.GITHUB_TOKEN }}
          version-extraction-override: 'regex:version = "(.*)"'

  build:
    name: Build Binary (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    needs: [metadata]
    permissions:
      actions: read
      id-token: write
      contents: write
      attestations: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            cross: true
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            cross: true
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            cross: false
          - target: aarch64-apple-darwin
            os: macos-latest
            cross: false
          - target: x86_64-apple-darwin
            os: macos-13
            cross: false
    steps:
      - name: Checkout source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          key: build-${{ matrix.target }}-${{ matrix.cross }}-${{ matrix.os }}

      - name: Install cross
        if: matrix.cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: |
          ${{ matrix.cross && 'cross' || 'cargo' }} build --release --color always${{ endsWith(matrix.target, 'musl') && ' --no-default-features --features rustls-tls' || '' }} --target ${{ matrix.target }}
          mv target/${{ matrix.target }}/release/conda-deny${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }} conda-deny-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}


      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
        if: needs.metadata.outputs.release == 'true'
        with:
          subject-path: conda-deny-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}

      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: conda-deny-${{ matrix.target }}
          path: conda-deny-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}
          if-no-files-found: error

  hashes:
    name: Compute hashes
    needs: [metadata, build]
    if: needs.metadata.outputs.release == 'true'
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: conda-deny-*
          merge-multiple: true
      - name: Compute hashes
        id: hash
        run: |
          set -exuo pipefail
          files=$(ls conda-deny*)
          echo "hashes=$(sha256sum $files | base64 -w0)" >> "${GITHUB_OUTPUT}"

  provenance:
    needs: [metadata, hashes]
    permissions:
      actions: read
      id-token: write
      contents: write
    if: needs.metadata.outputs.release == 'true'
    # This cannot be pinned: https://github.com/slsa-framework/slsa-github-generator?tab=readme-ov-file#referencing-slsa-builders-and-generators
    # https://github.com/slsa-framework/slsa-verifier/issues/12
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.hashes.outputs.hashes }}"
      upload-assets: false

  release:
    name: Create Release
    needs: [metadata, build, provenance]
    if: ${{ needs.metadata.outputs.release == 'true' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Download artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: conda-deny-*
          merge-multiple: true
      - name: Download provenance
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.provenance.outputs.provenance-name }}
          merge-multiple: true
      - name: Push v${{ needs.metadata.outputs.version }} tag
        run: |
          git tag v${{ needs.metadata.outputs.version }}
          git push origin v${{ needs.metadata.outputs.version }}
      - name: Create Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631  # v2.2.2
        with:
          generate_release_notes: true
          tag_name: v${{ needs.metadata.outputs.version }}
          draft: false
          files: |
            ${{ needs.provenance.outputs.provenance-name }}
            conda-deny-*
